/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictacclient;

import javax.swing.JOptionPane;

/**
 *
 * @author pabca
 */
public class Juego extends javax.swing.JFrame {
    
    private final String icon;
    private final String player1;
    private final String player2;
    private boolean ismyTurn;

    /**
     * Creates new form Juego
     * @param icon
     * @param player1
     * @param player2
     * @param ismyTurn
     */
    public Juego(String icon, String player1, String player2, boolean ismyTurn) {
        this.icon = icon;
        this.player1 = player1;
        this.player2 = player2;
        this.ismyTurn = ismyTurn;
        initComponents();
        this.playerLabel.setText(ismyTurn ? player1:player2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablero = new javax.swing.JPanel();
        slot1 = new javax.swing.JButton();
        slot2 = new javax.swing.JButton();
        slot3 = new javax.swing.JButton();
        slot4 = new javax.swing.JButton();
        slot5 = new javax.swing.JButton();
        slot6 = new javax.swing.JButton();
        slot7 = new javax.swing.JButton();
        slot8 = new javax.swing.JButton();
        slot9 = new javax.swing.JButton();
        infoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        playerLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablero.setPreferredSize(new java.awt.Dimension(400, 400));
        tablero.setLayout(new java.awt.GridLayout(3, 3));

        slot1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot1ActionPerformed(evt);
            }
        });
        tablero.add(slot1);

        slot2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot2ActionPerformed(evt);
            }
        });
        tablero.add(slot2);

        slot3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot3ActionPerformed(evt);
            }
        });
        tablero.add(slot3);

        slot4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot4ActionPerformed(evt);
            }
        });
        tablero.add(slot4);

        slot5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot5ActionPerformed(evt);
            }
        });
        tablero.add(slot5);

        slot6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot6ActionPerformed(evt);
            }
        });
        tablero.add(slot6);

        slot7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot7ActionPerformed(evt);
            }
        });
        tablero.add(slot7);

        slot8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot8ActionPerformed(evt);
            }
        });
        tablero.add(slot8);

        slot9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot9ActionPerformed(evt);
            }
        });
        tablero.add(slot9);

        jLabel1.setText("Es turno de: ");

        playerLabel.setText("player");

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(playerLabel))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(tablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void slot1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot1ActionPerformed
        //Obtener si es mi turno
        if(ismyTurn) {
            //Si el jugador en turno soy yo cambiar la etiqueta a mi signo
            slot1.setText(icon);
            slot1.setEnabled(false);

            
            //Mandar el mensaje al servidor de que ya tiré, con el numero de boton
            ismyTurn = false;
            playerLabel.setText(player2);
            Inicio.con.sendMove("1");
            
            checkIfEnd();
        }
    }//GEN-LAST:event_slot1ActionPerformed

    private void slot2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot2ActionPerformed
                //Obtener si es mi turno
        if(ismyTurn) {
            //Si el jugador en turno soy yo cambiar la etiqueta a mi signo
            slot2.setText(icon);
            slot2.setEnabled(false);
            //Checar en el arreglo si hay tres en linea
            
            
            //Mandar el mensaje al servidor de que ya tiré, con el numero de boton
            ismyTurn = false;
            playerLabel.setText(player2);
            Inicio.con.sendMove("2");
            
            checkIfEnd();
        }
    }//GEN-LAST:event_slot2ActionPerformed

    private void slot3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot3ActionPerformed
                //Obtener si es mi turno
        if(ismyTurn) {
            //Si el jugador en turno soy yo cambiar la etiqueta a mi signo
            slot3.setText(icon);
            slot3.setEnabled(false);
            //Checar en el arreglo si hay tres en linea
            
            
            //Mandar el mensaje al servidor de que ya tiré, con el numero de boton
            ismyTurn = false;
            playerLabel.setText(player2);
            Inicio.con.sendMove("3");
            
            checkIfEnd();
        }
    }//GEN-LAST:event_slot3ActionPerformed

    private void slot4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot4ActionPerformed
                //Obtener si es mi turno
        if(ismyTurn) {
            //Si el jugador en turno soy yo cambiar la etiqueta a mi signo
            slot4.setText(icon);
            slot4.setEnabled(false);
            //Checar en el arreglo si hay tres en linea
            
            
            //Mandar el mensaje al servidor de que ya tiré, con el numero de boton
            ismyTurn = false;
            playerLabel.setText(player2);
            Inicio.con.sendMove("4");
            
            checkIfEnd();
        }
    }//GEN-LAST:event_slot4ActionPerformed

    private void slot5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot5ActionPerformed
                //Obtener si es mi turno
        if(ismyTurn) {
            //Si el jugador en turno soy yo cambiar la etiqueta a mi signo
            slot5.setText(icon);
            slot5.setEnabled(false);
            //Checar en el arreglo si hay tres en linea
            
            
            //Mandar el mensaje al servidor de que ya tiré, con el numero de boton
            ismyTurn = false;
            playerLabel.setText(player2);
            Inicio.con.sendMove("5");
            
            checkIfEnd();
        }
    }//GEN-LAST:event_slot5ActionPerformed

    private void slot6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot6ActionPerformed
                //Obtener si es mi turno
        if(ismyTurn) {
            //Si el jugador en turno soy yo cambiar la etiqueta a mi signo
            slot6.setText(icon);
            slot6.setEnabled(false);
            //Checar en el arreglo si hay tres en linea
            
            
            //Mandar el mensaje al servidor de que ya tiré, con el numero de boton
            ismyTurn = false;
            playerLabel.setText(player2);
            Inicio.con.sendMove("6");
            
            checkIfEnd();
        }
    }//GEN-LAST:event_slot6ActionPerformed

    private void slot7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot7ActionPerformed
                //Obtener si es mi turno
        if(ismyTurn) {
            //Si el jugador en turno soy yo cambiar la etiqueta a mi signo
            slot7.setText(icon);
            slot7.setEnabled(false);
            //Checar en el arreglo si hay tres en linea
            
            
            //Mandar el mensaje al servidor de que ya tiré, con el numero de boton
            ismyTurn = false;
            playerLabel.setText(player2);
            Inicio.con.sendMove("7");
            
            checkIfEnd();
        }
    }//GEN-LAST:event_slot7ActionPerformed

    private void slot8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot8ActionPerformed
                //Obtener si es mi turno
        if(ismyTurn) {
            //Si el jugador en turno soy yo cambiar la etiqueta a mi signo
            slot8.setText(icon);
            slot8.setEnabled(false);
            //Checar en el arreglo si hay tres en linea
            
            
            //Mandar el mensaje al servidor de que ya tiré, con el numero de boton
            ismyTurn = false;
            playerLabel.setText(player2);
            Inicio.con.sendMove("8");
            
            checkIfEnd();
        }
    }//GEN-LAST:event_slot8ActionPerformed

    private void slot9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot9ActionPerformed
                //Obtener si es mi turno
        if(ismyTurn) {
            //Si el jugador en turno soy yo cambiar la etiqueta a mi signo
            slot9.setText(icon);
            slot9.setEnabled(false);

            //Mandar el mensaje al servidor de que ya tiré, con el numero de boton
            ismyTurn = false;
            playerLabel.setText(player2);
            Inicio.con.sendMove("9");
            
            checkIfEnd();
            
        }
    }//GEN-LAST:event_slot9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {}
        });
    }
    
    public void onWinning() {
        //Terminar el juego con mensaje de ganador
        JOptionPane.showMessageDialog(null, "Eres el ganador!!!");
        //Pedir al servidor que lo registre
        Inicio.con.registerGame(player2);
        //Volver al menú
        Inicio.con.menu.setVisible(true);
        System.out.println("Terminando juego");
        this.dispose();
    }
    
    public void onLosing() {
        //Terminar el juego con mensaje de perdida
        JOptionPane.showMessageDialog(null, "Eres el perdedor :(");
        //Volver al menu
        Inicio.con.menu.setVisible(true);
        System.out.println("Terminando juego");
        this.dispose(); 
    }
    
    public void onTie() {
        JOptionPane.showMessageDialog(null, "Empate!"); 
        //Enviar al servidor que fue empate
        Inicio.con.menu.setVisible(true);
        this.dispose();
    }
            
    
    public void recieveMove(String slot){
        String resIcon = icon.equals("X")?"O":"X";
        switch (slot) {
            case "1":
                this.slot1.setText(resIcon);
                this.slot1.setEnabled(false);
                break;
            case "2":
                this.slot2.setText(resIcon);
                this.slot2.setEnabled(false);
                break;
            case "3":
                this.slot3.setText(resIcon);
                this.slot3.setEnabled(false);
                break;
            case "4":
                this.slot4.setText(resIcon);
                this.slot4.setEnabled(false);
                break;
            case "5":
                this.slot5.setText(resIcon);
                this.slot5.setEnabled(false);
                break;
            case "6":
                this.slot6.setText(resIcon);
                this.slot6.setEnabled(false);
                break;
            case "7":
                this.slot7.setText(resIcon);
                this.slot7.setEnabled(false);
                break;
            case "8":
                this.slot8.setText(resIcon);
                this.slot8.setEnabled(false);
                break;
            case "9":
                this.slot9.setText(resIcon);
                this.slot9.setEnabled(false);
                break;
        }
        
        this.playerLabel.setText(player1);
        this.ismyTurn = true;
    }
    
    private void checkIfEnd() {
        
//        x x x
//        - - -
//        - - -  
        if(slot1.getText().equals(icon) && slot2.getText().equals(icon) && slot3.getText().equals(icon))
            this.onWinning();
//        - - -
//        x x x
//        - - -  
        else if(slot4.getText().equals(icon) && slot5.getText().equals(icon) && slot6.getText().equals(icon))
            this.onWinning();
//        - - -
//        - - -
//        x x x
        else if(slot7.getText().equals(icon) && slot8.getText().equals(icon) && slot9.getText().equals(icon))
            this.onWinning();
//        x - -
//        x - -
//        x - -
        else if(slot1.getText().equals(icon) && slot4.getText().equals(icon) && slot7.getText().equals(icon))
            this.onWinning();
//        - x -
//        - x -
//        - x -
        else if(slot2.getText().equals(icon) && slot5.getText().equals(icon) && slot8.getText().equals(icon))
            this.onWinning();
//        - - x
//        - - x
//        - - x
        else if(slot3.getText().equals(icon) && slot6.getText().equals(icon) && slot9.getText().equals(icon))
            this.onWinning();
//        x - -
//        - x -
//        - - x
        else if(slot1.getText().equals(icon) && slot5.getText().equals(icon) && slot9.getText().equals(icon))
            this.onWinning();
//        - - x
//        - x -
//        x - -
        else if(slot3.getText().equals(icon) && slot5.getText().equals(icon) && slot7.getText().equals(icon))
            this.onWinning();
        
//      Revisar empate
        else if (
            (slot1.getText().equals("X")  || slot1.getText().equals("X") ) &&
            (slot2.getText().equals("X")  || slot2.getText().equals("X") ) &&
            (slot3.getText().equals("X")  || slot3.getText().equals("X") ) &&
            (slot4.getText().equals("X")  || slot4.getText().equals("X") ) &&
            (slot5.getText().equals("X")  || slot5.getText().equals("X") ) &&
            (slot6.getText().equals("X")  || slot6.getText().equals("X") ) &&
            (slot7.getText().equals("X")  || slot7.getText().equals("X") ) &&
            (slot8.getText().equals("X")  || slot8.getText().equals("X") ) &&
            (slot9.getText().equals("X")  || slot9.getText().equals("X") )
        ) this.onTie();
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel playerLabel;
    private javax.swing.JButton slot1;
    private javax.swing.JButton slot2;
    private javax.swing.JButton slot3;
    private javax.swing.JButton slot4;
    private javax.swing.JButton slot5;
    private javax.swing.JButton slot6;
    private javax.swing.JButton slot7;
    private javax.swing.JButton slot8;
    private javax.swing.JButton slot9;
    private javax.swing.JPanel tablero;
    // End of variables declaration//GEN-END:variables
    
}
